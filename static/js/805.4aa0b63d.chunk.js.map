{"version":3,"file":"static/js/805.4aa0b63d.chunk.js","mappings":"6KAMA,MA+BA,EA/B2BA,EAAAA,YAAiB,CAAAC,EAWzCC,KAAQ,IAXkC,SAC3CC,EAAQ,UACRC,EAAS,QACTC,EAAO,SACPC,EAAQ,WACRC,EAAU,MACVC,EAAK,KACLC,EAAI,QACJC,EAAO,WACPC,KACGC,GACJX,EACC,MAAMY,GAAoBC,EAAAA,EAAAA,IAAmBX,EAAU,SACjDY,EAAUC,IAAWZ,EAAWS,EAAmBH,GAAW,GAAGG,KAAqBH,IAAWD,GAAQ,GAAGI,KAAqBJ,IAAQJ,GAAW,GAAGQ,KAAwC,kBAAZR,EAAuB,WAAWA,IAAY,YAAaC,GAAY,GAAGO,aAA8BN,GAAc,GAAGM,eAAgCL,GAAS,GAAGK,WACxVI,GAAqBC,EAAAA,EAAAA,KAAK,QAAS,IACpCN,EACHR,UAAWW,EACXb,IAAKA,IAEP,GAAIS,EAAY,CACd,IAAIQ,EAAkB,GAAGN,eAIzB,MAH0B,kBAAfF,IACTQ,EAAkB,GAAGA,KAAmBR,MAEtBO,EAAAA,EAAAA,KAAK,MAAO,CAC9Bd,UAAWe,EACXC,SAAUH,GAEd,CACA,OAAOA,CAAK,I,kCCiCd,QAxDA,WAGI,MAAMI,GAAQC,EAAAA,EAAAA,KAAaD,GAAmBA,IACxCE,EAAOF,EAAME,KAGbC,GAAWC,EAAAA,EAAAA,MACjB,OACIC,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EAIIM,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAKC,EAAMM,KAAKC,KAAK,IAAEP,EAAMM,KAAKE,IAAI,sCACtCX,EAAAA,EAAAA,KAAA,UAAQY,QAASA,IACbN,GAASO,EAAAA,EAAAA,GAAS,MACrBX,SAAC,oBAEFM,EAAAA,EAAAA,MAACM,EAAK,CAAAZ,SAAA,EACFF,EAAAA,EAAAA,KAAA,SAAAE,UACIM,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,OACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mCAGZF,EAAAA,EAAAA,KAAA,SAAAE,SAEQG,EAAKU,KAAI,CAACC,EAAGC,KACTT,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAKG,EAAKY,GAAGC,MACblB,EAAAA,EAAAA,KAAA,MAAAE,SAAKG,EAAKY,GAAGP,QACbV,EAAAA,EAAAA,KAAA,MAAAE,SAAKG,EAAKY,GAAGE,SACbX,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACIF,EAAAA,EAAAA,KAAA,UAAQY,QAASA,KAGbN,GAASc,EAAAA,EAAAA,IAASf,EAAKY,IAAI,EAAEf,SAAC,OAGlCF,EAAAA,EAAAA,KAAA,UAAQY,QAASA,KAEbN,GAASe,EAAAA,EAAAA,IAAWhB,EAAKY,IAAI,EAAEf,SAAC,WAbnCe,YAwBrC,C","sources":["../node_modules/react-bootstrap/esm/Table.js","routes/Cart.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","import { Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeName, increase } from \"./../store/userSlice.js\";\r\nimport { addCount, minusCount } from \"../store.js\";\r\nimport { memo, useMemo, useState } from \"react\";\r\n\r\n// memo? 이 컴포넌트는요 꼭 필요할때 재렌더링 해주세요\r\nlet Child = memo( function() {\r\n    console.log('재렌더링됨')\r\n    return <div>자식임</div>\r\n})\r\n\r\nfunction Cart() {\r\n\r\n    // const state = useSelector((state) => { return state})   // Redux store 가져와줌.\r\n    const state = useSelector((state) => { return state})   // store의 user만 가져옴!\r\n    const cart = state.cart;\r\n\r\n    // store.js로 요청보내주는 함수임.\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div>\r\n            {/* <Child count={count}></Child>\r\n            <button onClick={() => { setCount(count+1) }}>+</button> */}\r\n\r\n            <h6>{state.user.name} {state.user.age}의 장바구니</h6>\r\n            <button onClick={() => \r\n                dispatch(increase(100))\r\n            }> 버튼 </button>\r\n\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>상품명</th>\r\n                        <th>수량</th>\r\n                        <th>변경하기</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        cart.map((a, i) =>\r\n                            <tr key={i}>\r\n                                <td>{cart[i].id}</td>\r\n                                <td>{cart[i].name}</td>\r\n                                <td>{cart[i].count}</td>\r\n                                <td>\r\n                                    <button onClick={()=> {\r\n                                        // dispatch( state 변경함수() )\r\n                                        // 오늘의 숙제 1. + 버튼 누르면 수량이 +1 되는 기능\r\n                                        dispatch(addCount(cart[i]))}}>\r\n                                        +\r\n                                    </button>\r\n                                    <button onClick={()=> {\r\n                                        // 응용 1. 장바구니 항목삭제기능\r\n                                        dispatch(minusCount(cart[i]))}}>\r\n                                        -\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </Table> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;"],"names":["React","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","state","useSelector","cart","dispatch","useDispatch","_jsxs","user","name","age","onClick","increase","Table","map","a","i","id","count","addCount","minusCount"],"sourceRoot":""}