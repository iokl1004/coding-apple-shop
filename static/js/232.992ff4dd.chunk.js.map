{"version":3,"file":"static/js/232.992ff4dd.chunk.js","mappings":"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","sources":["routes/Detail.js","hooks/like.js","hooks/user.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from 'styled-components';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { Context1 } from './../App.js';\r\nimport { addItem } from \"./../store.js\";\r\nimport { useLike } from \"../hooks/like.js\";\r\nimport axios from \"axios\";\r\nimport { useUsername } from \"../hooks/user.js\";\r\n\r\n// const YellowBtn = styled.button`\r\n//   background : ${ props => props.bg };\r\n//   color : ${ props => props.bg == 'blue' ? 'white' : 'black' };\r\n//   padding : 10px;\r\n// `\r\n// // 기존 styled 가져올수도 있다!\r\n// const NewBtn = styled.button(YellowBtn);\r\n\r\n// const Box = styled.div`\r\n//   background : grey;\r\n//   padding : 20px;\r\n// `\r\n\r\nfunction Detail(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  // 보관함을 해체해줌.\r\n  // const {재고} = useContext(Context1)\r\n\r\n  // 부모단에서 선언한 id값 가져옴\r\n  const {id} = useParams();\r\n  const shoesInfo = props.shoes.find(obj => obj.id == id);\r\n  const [status, setStatus] = useState(true);\r\n  const [textinput, setTextinput] = useState('');\r\n  const [tab, setTab] = useState(0);  // 탭 상태 저장해둘 state\r\n\r\n  const [fade2, setFade2] = useState('');\r\n\r\n  useEffect(()=> {\r\n    let getWatched = localStorage.getItem('watched')\r\n    getWatched = JSON.parse(getWatched)\r\n    getWatched.push(shoesInfo.id)\r\n    getWatched = new Set(getWatched)\r\n    getWatched = Array.from(getWatched)\r\n    localStorage.setItem('watched', JSON.stringify(getWatched));\r\n  })\r\n\r\n  // const watched = JSON.parse(localStorage.getItem('watched'));\r\n  // watched.push(id);\r\n  // JSON.stringify(watched);\r\n  // localStorage.setItem('watched', JSON.stringify(watched));\r\n\r\n  // status 변수가 변경이 될때 setTimeout 함수를 실행 시킨다.\r\n  useEffect(() => {\r\n    setTimeout(() => { setStatus(false) }, 2000)\r\n\r\n    // 클린업 펑션 : useEffect 동작 전에 실행되는 return ()=> {}\r\n    return () => {\r\n      // console.log(12);\r\n    }\r\n  });\r\n  \r\n  // 오늘의 숙제 : <input>에 숫자말고 다른거 입력하면 그러지말라고 안내메시지(alert) 띄우기\r\n  useEffect(() => {\r\n    if (isNaN(textinput) === true) {\r\n      alert('그러지마세요');\r\n    }\r\n  }, [textinput]);\r\n\r\n  // 오늘의 숙제 : Detail 페이지 로드시 투명도 0에서 1로 애니메시연 주고 싶으면?\r\n  useEffect(() => {\r\n    setFade2('end')\r\n\r\n    return () => {\r\n      setFade2('')\r\n    }\r\n  }, [])\r\n\r\n  // 44. custom hook으로 코드 재사용하기\r\n  let [like, addLike] = useLike()\r\n  let username = useUsername()\r\n\r\n  return (\r\n    <div className={'container start ' + fade2}>\r\n      {/* <Box> */}\r\n        {/* <YellowBtn bg='blue'>버튼</YellowBtn>\r\n        <YellowBtn bg='orange'>버튼</YellowBtn> */}\r\n      {/* </Box> */}\r\n      {\r\n        status === true\r\n        ? <div className=\"alert alert-warning\">\r\n            2초이내 구매시 할인\r\n          </div>\r\n        : null\r\n      }\r\n      {/* {count}\r\n\r\n      <button onClick={() => { setCount(count+1)} }>버튼</button> */}\r\n      {/* {재고} */}\r\n      {username}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\" />\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {like} <span onClick={() => { addLike()}}>♥</span>\r\n          <input onChange={ (e) => setTextinput(e.target.value) } />\r\n          <h4 className=\"pt-5\">{shoesInfo.title}</h4>\r\n          <p>{shoesInfo.content}</p>\r\n          <p>{shoesInfo.price}원</p>\r\n          <button className=\"btn btn-danger\" onClick={() => {\r\n            dispatch(addItem( {id : shoesInfo.id, name : shoesInfo.title, count : 1} ))\r\n          }}>주문하기</button> \r\n        </div>\r\n      </div>\r\n      \r\n      {/* defaultActiveKey : 기본으로 눌려있을 버튼 */}\r\n      <Nav variant=\"tabs\"  defaultActiveKey=\"link0\">\r\n        <Nav.Item>\r\n          <Nav.Link onClick={() => setTab(0)} eventKey=\"link0\">버튼0</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link onClick={() => setTab(1)} eventKey=\"link1\">버튼1</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link onClick={() => setTab(2)} eventKey=\"link2\">버튼2</Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n      <TabContent tab={tab}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction TabContent({tab}) {\r\n  // 1. if문 사용하는 방법\r\n  // if(tab === 0) {\r\n  //   return <div>내용0</div>\r\n  // }\r\n  // else if(tab === 1) {\r\n  //   return <div>내용1</div>\r\n  // }\r\n  // else if(tab === 2) {\r\n  //   return <div>내용2</div>\r\n  // }\r\n\r\n  const [fade, setFade] = useState('');\r\n  const {재고} = useContext(Context1)\r\n\r\n  useEffect(() => {\r\n    // 리액트의 automatic batching 기능\r\n    setTimeout(() => { setFade('end') }, 10)\r\n\r\n    return () => {\r\n      setFade('')\r\n    }\r\n  }, [tab])\r\n  // 2. if문을 사용하지 않는 방법\r\n  return (\r\n    <div className={'start ' + fade}>\r\n      {   [<div>내용0</div>\r\n        , <div>내용1</div>\r\n        , <div>내용2</div>]\r\n        [tab]\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Detail;","// 44. custom hook으로 코드 재사용하기\r\nimport { useState } from \"react\"\r\n\r\nexport function useLike() {\r\n    // 좋아요 버튼과 기능을 만들자!\r\n    let [like, setLike] = useState(0)\r\n    function addLike() {\r\n      setLike(a => a + 1)\r\n    }\r\n\r\n    return [like, addLike];\r\n}","// 44. custom hook으로 코드 재사용하기\r\n// 오늘의 숙제 : public 폴더 내에 있는 username.json 파일을 읽어서 보여주자!\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\"\r\n\r\nexport function useUsername() {\r\n    const [username, setUsername] = useState('')\r\n\r\n    useEffect(()=> {\r\n        axios.get('/username.json')\r\n        .then((a) => {\r\n            setUsername(a.data)\r\n        })\r\n        .catch(setUsername('데이터를 읽어오지 못하였습니다.'))\r\n    }, [])\r\n\r\n    return username;\r\n}"],"names":["TabContent","_ref","tab","fade","setFade","useState","재고","useContext","Context1","useEffect","setTimeout","_jsx","className","children","props","dispatch","useDispatch","id","useParams","shoesInfo","shoes","find","obj","status","setStatus","textinput","setTextinput","setTab","fade2","setFade2","getWatched","localStorage","getItem","JSON","parse","push","Set","Array","from","setItem","stringify","isNaN","alert","like","addLike","setLike","a","useLike","username","setUsername","axios","get","then","data","catch","useUsername","_jsxs","src","width","onClick","onChange","e","target","value","title","content","price","addItem","name","count","Nav","variant","defaultActiveKey","Item","Link","eventKey"],"sourceRoot":""}